.catalog:
  name: Telegraf
  version: 1.1.2
  description: |
    Telegraf is a plugin-driven server agent for collecting and reporting metrics.
  questions:
    - variable: "influxdb_link"
      description: |
        stack/service link or external service link to influxdb cluster.
      label: "Influxdb stack/service"
      default: "influxdb/influxdb"
      required: true
      type: "service"
    - variable: "telegraf_config"
      description: |
        Telegraf configuration.
      label: "Configuration"
      required: true
      type: "multiline"
      default: |
        [global_tags]
          # dc = "us-east-1" # will tag all metrics with dc=us-east-1
          # rack = "1a"
          ## Environment variables can be used as tags, and throughout the config file
          # user = "$USER"
        [agent]
          ## Default data collection interval for all inputs
          interval = "10s"
          ## Rounds collection interval to 'interval'
          ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
          round_interval = true
          ## Telegraf will send metrics to outputs in batches of at
          ## most metric_batch_size metrics.
          metric_batch_size = 1000
          ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
          ## output, and will flush this buffer on a successful write. Oldest metrics
          ## are dropped first when this buffer fills.
          metric_buffer_limit = 10000
          ## Collection jitter is used to jitter the collection by a random amount.
          ## Each plugin will sleep for a random time within jitter before collecting.
          ## This can be used to avoid many plugins querying things like sysfs at the
          ## same time, which can have a measurable effect on the system.
          collection_jitter = "0s"
          ## Default flushing interval for all outputs. You shouldn't set this below
          ## interval. Maximum flush_interval will be flush_interval + flush_jitter
          flush_interval = "10s"
          ## Jitter the flush interval by a random amount. This is primarily to avoid
          ## large write spikes for users running a large number of telegraf instances.
          ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
          flush_jitter = "0s"
          ## Run telegraf in debug mode
          debug = false
          ## Run telegraf in quiet mode
          quiet = false
          ## Override default hostname, if empty use os.Hostname()
          hostname = ""
          ## If set to true, do no set the "host" tag in the telegraf agent.
          omit_hostname = false
        [[outputs.influxdb]]
          ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
          ## Multiple urls can be specified as part of the same cluster,
          ## this means that only ONE of the urls will be written to each interval.
          # urls = ["udp://localhost:8089"] # UDP endpoint example
          urls = ["http://influxdb:8086"] # required
          ## The target database for metrics (telegraf will create it if not exists).
          database = "telegraf" # required
          ## Precision of writes, valid values are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
          ## note: using "s" precision greatly improves InfluxDB compression.
          precision = "s"
          ## Retention policy to write to.
          retention_policy = "default"
          ## Write consistency (clusters only), can be: "any", "one", "quorom", "all"
          write_consistency = "any"
          ## Write timeout (for the InfluxDB client), formatted as a string.
          ## If not provided, will default to 5s. 0s means no timeout (not recommended).
          timeout = "5s"
          # username = "telegraf"
          # password = "metricsmetricsmetricsmetrics"
          ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
          # user_agent = "telegraf"
          ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
          # udp_payload = 512
          ## Optional SSL Config
          # ssl_ca = "/etc/telegraf/ca.pem"
          # ssl_cert = "/etc/telegraf/cert.pem"
          # ssl_key = "/etc/telegraf/key.pem"
          ## Use SSL but skip chain & host verification
          # insecure_skip_verify = false
        [[inputs.cpu]]
          ## Whether to report per-cpu stats or not
          percpu = true
          ## Whether to report total system cpu stats or not
          totalcpu = true
          ## Comment this line if you want the raw CPU time metrics
          fielddrop = ["time_*"]
        [[inputs.disk]]
          ## By default, telegraf gather stats for all mountpoints.
          ## Setting mountpoints will restrict the stats to the specified mountpoints.
          # mount_points = ["/"]
          ## Ignore some mountpoints by filesystem type. For example (dev)tmpfs (usually
          ## present on /run, /var/run, /dev/shm or /dev).
          ignore_fs = ["tmpfs", "devtmpfs"]
        [[inputs.diskio]]
          ## By default, telegraf will gather stats for all devices including
          ## disk partitions.
          ## Setting devices will restrict the stats to the specified devices.
          # devices = ["sda", "sdb"]
          ## Uncomment the following line if you do not need disk serial numbers.
          # skip_serial_number = true
        [[inputs.kernel]]
          # no configuration
        [[inputs.mem]]
          # no configuration
        [[inputs.processes]]
          # no configuration
        [[inputs.swap]]
          # no configuration
        [[inputs.system]]
          # no configuration
telegraf:
  scale: 1
  metadata:
    config: |
      ${telegraf_config}